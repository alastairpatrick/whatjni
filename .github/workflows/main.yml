name: Build whatjni
on:
  - pull_request
  - push

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build ${{matrix.arch}} ${{matrix.os}} ${{matrix.toolChain}} ${{matrix.javaDistribution}}JDK${{matrix.javaVersion}}
    runs-on: ${{matrix.os}}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, ubuntu-20.04, macos-10.15]
        arch: [x64]
        toolChain: [default]
        javaVersion: [16]
        javaDistribution: [zulu]

        include:
          - os: ubuntu-20.04
            arch: x64
            toolChain: clang
            javaVersion: 16
            javaDistribution: zulu

    steps:
      - name: Test 1 ${{ env[matrix.os] }}
        run: echo ${{ env[matrix.os] }}
        env:
          windows-2019: Windows
          ubuntu-20.04: Linux
          macos-10.15: Macos

      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{matrix.javaVersion}}
          distribution: ${{matrix.javaDistribution}}
          architecture: ${{matrix.arch}}

      - name: JAVA_HOME diagnostics
        run: echo JAVA_HOME = $JAVA_HOME; ls -R $JAVA_HOME

      - name: Remove GCC
        run: sudo rm `which g++`; sudo rm `which gcc`
        if: ${{ startsWith(matrix.os, 'ubuntu') && matrix.toolChain != 'gcc' }}

      - name: Build
        run: ./gradlew run${{ env[matrix.os] }}${{ env[matrix.arch] }}
        env:
          windows-2019: Windows
          ubuntu-20.04: Linux
          macos-10.15: Macos
          x64: X86-64
          x86: X86
