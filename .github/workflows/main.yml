name: Build whatjni
on:
  - pull_request
  - push

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build ${{matrix.arch}}_${{matrix.os}}_${{matrix.toolChain}}_${{matrix.javaDistribution}}JDK${{matrix.javaVersion}}
    runs-on: '${{ fromJson(''{ windows: "windows-2019", linux: "ubuntu-20.04", macos: "macos-10.15" }'')[matrix.os] }}'

    strategy:
      fail-fast: false
      matrix:
        os: [windows, linux, macos]
        arch: [x64]
        toolChain: [default]
        javaVersion: [8, 16]
        javaDistribution: [adopt, zulu]

        include:
          - os: ubuntu-20.04
            arch: x64
            toolChain: clang
            javaVersion: 16
            javaDistribution: zulu

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{matrix.javaVersion}}
          distribution: ${{matrix.javaDistribution}}
          architecture: ${{matrix.arch}}

      - name: List JDK files
        run: ls -R $JAVA_HOME

      - name: Remove GCC
        run: sudo rm `which g++`; sudo rm `which gcc`
        if: ${{ startsWith(matrix.os, 'linux') && matrix.toolChain != 'gcc' }}

      - name: List Gradle tasks
        run: ./gradlew tasks

      - name: Run tests
        run: './gradlew runTest${{ fromJson(''{ windows: "Windows", linux: "Linux", macos: "MacOS" }'')[matrix.os] }}${{ fromJson(''{ x64: "X86-64", x86: "X86" }'')[matrix.os] }}'