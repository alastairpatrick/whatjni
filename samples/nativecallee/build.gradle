import whatjni.GenJNIBindingsTask

plugins {
    id 'cpp-application'
}

version 'unspecified'

repositories {
    mavenCentral()
}

configurations {
    jniBinding {
        canBeConsumed = false
        canBeResolved = true

        attributes {
            attribute(Usage.USAGE_ATTRIBUTE, objects.named(Usage, "java-api"))
            attribute(LibraryElements.LIBRARY_ELEMENTS_ATTRIBUTE, objects.named(LibraryElements, "classes"))
        }
    }
}

dependencies {
    implementation project(":base")
    jniBinding project(":samples:javacaller")
}

application {
    targetMachines = [
            machines.linux.x86_64,
            machines.windows.x86, machines.windows.x86_64,
            machines.macOS.x86_64
    ]
}

task genBindings(type: GenJNIBindingsTask) {
    dependsOn configurations.jniBinding
    classpath.from configurations.jniBinding.files
    nativePackages.addAll(["whatjni.samples"])
}

tasks.withType(CppCompile).configureEach {
    dependsOn "genBindings"
    includes.from("$buildDir/generated/sources/jniBindings")
}

print(configurations.jniBinding.files)